<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Tinkering with Winboard</title>
  <meta content="Alessandro Scotti" name="author">
</head>
<body>
<div style="text-align: center;"><big><big><big><span
 style="font-weight: bold;">Tinkering with Winboard</span></big></big></big><br>
<big><span style="font-weight: bold;">by Alessandro Scotti</span></big><br>
<big><span style="font-weight: bold;"></span></big></div>
<big><span style="font-weight: bold;"></span></big><br>
This readme is about some modifications I made to Winboard 4.2.7. Some
will work in Xboard too, while others are for Winboard only.
Regardless, everything here is absolutely experimental and has been
tested very little... so no warranties ok?<br>
<br>
If this archive does not include the source code (released under the
GPL) you can download it from my <a
 href="http://www.ascotti.org/programming/chess/winboard_x.htm">Winboard
"X" page</a>.<br>
<br>
Please note: always backup you winboard.ini file before installing a
new version. If later you want to go back to the previous version,
restoring the original winboard.ini is the best option. Otherwise,
Winboard could start complaining about some settings that it doesn't
recognize, and refuse to start. This is not as bad as it sounds (just
open winboard.ini with Notepad and remove the line it doesn't like) but
annoying nonetheless.<br>
<br>
<big style="font-weight: bold;">Misc (January 28, 2006)</big><br>
<br>
Fixed a bug where ponder scores could be attributed to the "other"
engine, which could also result in a wrong adjudication. Fixed analysis
mode output (repeating PV lines).<br>
<br>
<big style="font-weight: bold;">Misc (January 22, 2006)</big><br>
<br>
Actually released one day earlier... cool isn't it!? Well, the previous
version was just after
midnight so... Ok, anyway the only significant change here is that
commands "time"
and "otim" are sent separately. This hopefully helps some rare problems
found in Leo's environment.<br>
<br>
<big style="font-weight: bold;">Misc (January 21, 2006)</big><br>
<br>
Move history font can be selected from the Options | Fonts... dialog.
Accelerator for book info (Alt-B). Engine output supports analysis mode
at last! It also
shows pondering in human-engine matches now.<br>
<br>
<big style="font-weight: bold;">Misc (January 12, 2006)</big><br>
<br>
Attempt at colorizing Zippy. Fixed a small bug in displaying the
"clock" icon even when an engine was idle (engine output window).
Analysis window enhancements still missing! :-(<br>
<br>
<big style="font-weight: bold;">UCI support with Polyglot</big><br>
<br>
Winboard has now a somewhat limited but functional support for UCI
engines, leveraging the great Polyglot application by Fabien Letouzey.<br>
<br>
Let me spend a few words on this. Winboard is quite tightly coupled
with its own communication protocol, and adding a new one to it would
be a very ambitious project, requiring lots of code and who knows how
many debugging hours. I would like to have UCI in Winboard but hey, the
price to pay must be within reason! :-) Fortunately, we already have an
adapter that allows Winboard to use UCI engines: Polyglot! It works
very well and has been ultra-tested in thousands of games... is there
really need to reinvent the wheel again?<br>
However, using Polyglot has also a few drawbacks. The most important
are: 1) having to read carefully the readme.txt instructions (I'm not
joking on this), 2) having to manually edit the ini file for each
engine and 3) lack of a central location to set common options such as
the engine hash size.<br>
<br>
With this release, I have tried to address some of these concerns by
making Winboard aware of Polyglot. Here's how.<br>
<br>
<span style="font-weight: bold;">Install Polyglot</span><br>
<br>
First, make sure Polyglot is installed. If you don't have it, go to <a
 href="http://wbec-ridderkerk.nl/">http://wbec-ridderkerk.nl/</a> and
click on the Download Page link in the top toolbar. Then, a link to
download Polyglot will appear on the left. To "install" Polyglot just
create a folder named "Polyglot" and unpack the archive there.<br>
<br>
<span style="font-weight: bold;">Configure Polyglot and UCI options</span><br>
<br>
Now, run Winboard. There is a new Options | UCI... dialog that allows
you to setup several parameters: the directory where Polyglot is
located (i.e. the folder that contains polyglot.exe), the hash size
that will be assigned to each UCI engine (in megabytes), the path to
the Nalimov endgame tablebases (EGTB), the size of the EGTB cache in
megabytes and an option to let Polyglot use its book in place of the
engine. <br>
<br>
Some options are assigned a default value, but the one you have to set
immediately is the Polyglot Directory. Enter the name of the directory
when Polyglot has been installed, or more simply click on the attached
[...] button and select the directory from the GUI.<br>
<br>
This is all it's required to enable the new feature. Other options can
be set of course, but they are assigned default values anyway and can
also be set later. By the way, there is a small book named "fruit.bin"
in the Polyglot directory. Larger and better books are available on the
net (for example, on the site mentioned above).<br>
<br>
Please note: some changes in the UCI options dialog may require that
Winboard is restarted before they kick in (this is needed when an
engine is already running, because at present Winboard has no way to
talk directly to it in UCI).<br>
<br>
<span style="font-weight: bold;">Install an UCI engine</span><br>
<br>
At this time, engines must be installed by editing the winboard.ini
file, or with your preferred engine manager.<br>
<br>
To let Winboard know that an engine is UCI, add the /fUCI or /sUCI
parameter to the first or second engine respectively. For example my
line for Glaurung Mainz as a second engine is:<br>
<div style="margin-left: 40px;">
<pre>"Glaurung Mainz" /sUCI /sd="C:\Test\wglaurung" /scp="glaurung.exe"</pre>
</div>
and for Fruit 2.1 as a first engine:<br>
<div style="margin-left: 40px;">
<pre>"Fruit 2.1" /fUCI /fd=C:\Test\fruit_21 /fcp=fruit_21</pre>
</div>
That's it.<br>
<br>
<span style="font-weight: bold;">How does it works</span><br>
<br>
Winboard finds an UCI engine, it doesn't try to execute it directly.
Rather, it automatically creates an ini file for Polyglot, and then
runs Polyglot itself. This saves the user the hassle of having to
manually create and edit the ini file.<br>
<br>
The ini files are named polyglot_1st.ini and polyglot_2nd.ini (for the
first and second engine) and are created into Winboard's directory
every time an UCI engine is started. I have choosen to leave them on
disk on exit because they take very little space and it may be
interesting to go and have a look at them! :-)<br>
<br>
So, the idea is very simple but for me also very practical. I hope you
like it too! If not, be assured that it contributes <span
 style="font-weight: bold;">very</span> little to the size of Winboard
executable, and nothing happens if you do not use it! :-)<br>
<br>
<span style="font-weight: bold;">I can't use my favorite UCI engine:
many options are still unsupported!</span><br>
<br>
Sorry, this is a work in progress and more work is needed in order to
expand the feature range, also because of Winboard's architectural
limits. Fortunately, this mechanism is perfectly compatible with using
Polyglot "the old way", just manually create your ini file and create
or edit the entry into winboard.ini. For expert users, this may be a
preferred method anyway.<br>
<br>
<big style="font-weight: bold;">Misc (January 06, 2006)</big><br>
<br>
Board size options spaced correctly. Error dialog could appear partly
offscreen: fixed (quirk in the base code). Engine output updated also
with pondering data. Added indicators to engine output window (engine
color and status).<br>
<br>
Note: released this version early so the source archive could be
updated (resource.h file was missing).<br>
<br>
<big><span style="font-weight: bold;">Misc (January 03, 2006)</span></big><br>
<br>
Move history was not being updated when taking back and replaying the
last move: fixed. Could not access incremental clock in the Time
Control dialog: fixed.<br>
<br>
<big><span style="font-weight: bold;">Misc (December 31, 2005)</span></big><br>
<br>
Huge bug with long PV's in the engine output window made Winboard
crash: fixed (thanks Leo!) Many dialogs have been restyled a bit, to
give them (more or less)
consistent usage. Double clicking in the eval window is more precise.
Sometimes the gamelist window was popping up behind other windows:
fixed. Internal: support for captionless eval window (still can't make
my mind which version is better). Snapping now considers engine output
window too.<br>
<br>
<big><span style="font-weight: bold;">Misc (December 29, 2005)</span></big><br>
<br>
Fixed graphics issues with the highlight arrows (and more to come...).
Fixed a huge bug where PV info found PGN comments was attributed to the
wrong move. Can now read PGN comments with the "%eval" style. Can
adjudicate long games (draw). Can export the game list to the
clipboard. Evaluation histogram window is double-clickable. Exporting
the game list to the clipboard includes the "Annotator" tag, and all
fields are correctly quoted. Can suppress those annoying "Tag" and
"Comment" popups that occur when replaying a PGN game (look into
winboard.ini for the settings, no GUI yet). Updates move history when
automatically replaying a game. Engine options have a dedicated dialog
now, go to Options |
Engines...<br>
<br>
<big><span style="font-weight: bold;">Engine output window</span></big><br>
<br>
Winboard is able to display the output (PV) that comes from an engine.
The display is terse and simple but there is all the info. A typical PV
line
looks like this:<br>
<pre>&nbsp; 6&nbsp;&nbsp;&nbsp; -0.21&nbsp;&nbsp;&nbsp; 126320&nbsp;&nbsp;&nbsp; 0:01.00&nbsp;&nbsp;&nbsp; d5 exd5 Qxd5 Nc3 Qe5+ Qe2</pre>
and shows depth, score, nodes, time and PV (which is free text for
Winboard engines). Somewhere in the window you should also find the
engine name and, if available, the nodes per second (NPS) ratio.<br>
<big><span style="font-weight: bold;"></span></big><br>
<big style="font-weight: bold;">User interface for laying out windows</big><br>
<br>
There are now three windows that can automatically reopen at startup,
so we also need more power to rearrange them into a useful layout. Two
features help with this: "snapping" and "sticky" windows.<br>
<br>
Snapping occurs when you move or resize some of the secondary windows,
i.e. move history, evaluation histogram, engine output and game list.
It is also enabled for moving the main window. This feature makes it a
lot easier to align windows correctly. Basically, when you are moving
or sizing a windows with your mouse and you come close to an
"interesting" point the window will "snap" and align itself
automatically. At the same time, it will also make just a little more
difficult to move it away from this alignment, so you can't lose the
alignment so easily. At any rate, this is much easier done than said...
just try it.<br>
<br>
In addition to snapping, some windows (move history, evaluation
histogram, engine output) are considered sticky if they share an edge
with the main window. If so, they will preserve their position when you
move the main window.<br>
<br>
In practice, the above features give you the freedom of a multi-window
application, but also some of the advantages of using a single window.<br>
<br>
<big><span style="font-weight: bold;">Misc (December 21, 2005)</span></big><br>
<br>
The are a few changes and bugfixes in this release. Ctrl-V now works
properly in the interaction window. The "Type In Move" dialog has a
shortcut (Alt-M) and is now placed in the upper part of the parent, so
it doesn't cover the board. Positioning of the caret in the Move
History window has been fixed, it didn't work correctly especially when
double-clicking on a move. Move History was showing the opponent time
as part of a move when playing online, fixed.<br>
<br>
<big style="font-weight: bold;">Highlight move as arrow</big><br>
<br>
Winboard draws the move highlight using the black "gap" between the
board squares. Unfortunately, many of the textures I use don't work
well with this mechanism because they usually have a small gap.
Although it is somewhat possible to work around this problem by using
textures with greater contrast (see for example the Clouds
monochromatic theme) this features takes another approach and makes the
highlight display very difficult to miss! :-)<br>
<br>
This option is disabled by default. Go to the Options | General...
dialog to enable it.<br>
<br>
Note: I got a lot of fun from working out the required math... it
turned out not too difficult in the end, but not entirely trivial
either!<span style="font-weight: bold;"></span><br>
<br>
<big><span style="font-weight: bold;">Load score/depth info from PGN</span></big><br>
<br>
Winboard can load and display score/depth info saved in PGN files.<br>
<br>
<big><span style="font-weight: bold;">Evaluation histogram</span></big><br>
<br>
A new window is able to display graphically the score for each move in
a game. This is especially useful in engine/engine games, as you can
quickly locate interesting spots. Use Mode | Show Evaluation Graph to
show/hide the evaluation histogram window.<br>
<br>
The histogram/graph colors for black and white can be modified by
editing the following settings in winboard.ini (sorry no GUI yet):<br>
<div style="margin-left: 40px;">
<pre>/evalHistColorWhite=#ffffb0<br>/evalHistColorBlack=#ad5d3d</pre>
</div>
A color is specified thru its RGB components, in hex, from 00 to FF
(255). So for example the value #ffffb0 has R=FF=255, G=FF=255 and
B=B0=176.<br>
<br>
Note: the evaluation histogram window takes no resources (e.g. CPU)
when hidden.<br>
<br>
<big><span style="font-weight: bold;">Move history</span></big><br>
<br>
At last Winboard has a move history window! First release on Dec 13
(2005), I did not get any bug reports and was able to spot a couple on
my own, so getting closer to having something that works. I suspect
almost nobody uses it though, but never mind.<br>
<br>
Move history shows all the moves in the game, and optionally any
attached score/depth info. Use Mode | Show Move History to show/hide
the move history window.
Note that Winboard will remember the window state and restore it next
time its started.<br>
<br>
Note: the move history window takes no resources (e.g. CPU) when hidden.<br>
<br>
<big><span style="font-weight: bold;">Out of book information
("Annotator" PGN tag)</span></big><br>
<br>
Winboard can read and write a "new" PGN tag named "Annotator". This tag
only applies to chess engines and records the move number and score
when an engine first went out of its opening book. So for example this
value:<br>
<pre style="margin-left: 40px;">[Annotator "14. +0.00&nbsp;&nbsp; 13... +0.16"]</pre>
means that white went out of book at move 14 with an even score,
whereas black went out of book at move 13 giving itself a small
advantage. White is always shown first. In case one of the two is
missing, you can tell the color by the number of dots that follow the
move number (one dot for white, three dots for black).<br>
<br>
This tag is enabled by default. You can enable or disable it with from
the Save Game... dialog.<br>
<br>
Important note: although the "Annotator" tag is part of the PGN
standard with another meaning, it has been choosen here for
compatibility with existing databases (we could say there's almost a <span
 style="font-style: italic;">de-facto</span> standard). The original
tag is a string and not much used anyway, so even in case of
"conflicts" there should be little or no consequences. Please let me
know if you think there is a better solution!<br>
<br>
<big><span style="font-weight: bold;">Customizable game list headers</span></big><br>
<br>
The game list headers (that you get for example by loading a PGN
database with File | Load Game...) are now fully customizable: you get
to choose which tags are shown, and in which order. <br>
<br>
To customize your list, select Game List... from the Options menu: the
Game List Options dialog appears. <br>
<br>
In this dialog there is a list of tags and a few buttons. The list is
logically separated in two parts by a line marked "--- Hidden tags
---". Quite simply, tags that are listed <span
 style="font-weight: bold;">above</span> the separator line appear in
the game list headers, and tags below the separator remain hidden.<br>
<br>
You can move tags up and down in the list by selecting one and then
pressing the "Up" or "Down" buttons. Also, you can restore the tag
status to the current default or to the "factory" default (which is:
Event, Players, Result and Date).<br>
<br>
Note: the above only applies to PGN files, I haven't tested yet with
old-style saved games!<br>
<br>
<big><span style="font-weight: bold;">Support for Fisher Random Chess
(aka FRC, aka Chess960)</span></big><br>
<br>
In this version of Winboard the actual support for FRC has been
implemented by Fabien Letouzey and Tord Romstad. Later, I added the
necessary support code and user interface.<br>
<br>
Note: to see FRC in action, you must instruct Winboard to play the
corresponding variant. One easy way to do that is to run the program
with the "-variant fischerandom" command line options. In normal chess,
all FRC features and the "New Game FRC" menu item are disabled.<br>
<br>
FRC has been mostly integrated "seamlessly" in the existing user
interface, but there is also a new menu item named "New Game FRC" (it's
in the File menu). Selecting this item brings out a dialog where you
can enter the number of a FRC start position, from 0 to 959. These
numbers correspond to known and fixed position, so for example position
number 497 should be the same in any program that supports FRC
(Shredder 9, Arena and so on). Position number 518 is the start
position for standard chess.<br>
<br>
Winboard will always remember the last start position, and you will get
it again with the "New Game" command. To get a random position each
time a new game is started, open the "New Game FRC" dialog and enter -1
as the position number.<br>
<br>
<big><span style="font-weight: bold;">Enhanced game selection list</span></big><br>
<br>
There is a new filter feature in the game list (menu File | Load
Game...). If you want to view only the games of your favorite engine,
select the edit box in the lower right corner, type "Kiwi" and press
Enter or click on the Filter button: the list will show only the games
that contain the word "Kiwi". Wildcards are allowed so you can type
"Kiwi*Fruit" to get all matches with Kiwi (white) against Fruit
(black). You can further refine the search with more input if you wish,
for example "Kiwi*Fruit*1-0" will show all the games won by Kiwi
against Fruit. The list should be empty in this case. :-P<br>
<br>
Filters are not limited to engine names or results. Each line in the
game list contains a lot of information:<br>
<br>
<div style="margin-left: 40px;"><span style="font-style: italic;">game
number</span><span style="font-weight: bold; font-style: italic;">.</span><span
 style="font-style: italic;"> name of event</span><span
 style="font-weight: bold; font-style: italic;">,</span><span
 style="font-style: italic;"> white player</span><span
 style="font-weight: bold; font-style: italic;">-</span><span
 style="font-style: italic;">black player</span><span
 style="font-weight: bold; font-style: italic;">,</span><span
 style="font-style: italic;"> result</span><span
 style="font-weight: bold; font-style: italic;">,</span><span
 style="font-style: italic;"> date</span><br>
</div>
<br>
and the filter can be used to match anything in each line.<br>
<br>
Winboard also calculates some stats for the games being shown. You will
find this information in the window title with the following format:<br>
<br>
<div style="margin-left: 40px;"><span style="font-style: italic;">no.
of games shown / no. of games in the database (white wins - black wins
- drawn games)</span><br>
</div>
<br>
the latter statistics are for the games shown, so for example the
caption:<br>
<div style="margin-left: 40px;">
<pre>100/1300 games (44-49-7)</pre>
</div>
<br>
means the current view is showing 100 games out of 1300. Of these white
won 44, black won 49 and 7 were drawn.<br>
<br>
<big><span style="font-weight: bold;">Hung engines + name of
debug file</span></big><br>
<br>
In case an engine remains "hung" after a game, Winboard will now try to
kill the corresponding process. Use the "delayBeforeQuit" option to
control how much time to give an engine before it's shut down.<br>
It is also possible to change the name of the debug file using the
"nameOfDebugFile" option.<br>
Note: these options are mainly directed towards automated play (e.g.
tournaments) and should be completely uninteresting to most users!<br>
<br>
<big><span style="font-weight: bold;">Game adjudication</span></big><br>
<br>
User can adjudicate a game between two machines, using the "Action"
menu. Note that this only works if two machines are playing.<br>
<br>
Also, it is possible to adjudicate a game automatically with this
parameter:<br>
<div style="margin-left: 40px;">
<pre>/adjudicateLossThreshold=-700</pre>
</div>
if set to a negative value, Winboard will adjudicate a game if a engine
can't get a score above the specified threshold for 3 full moves (6
plies). Note that both engines must agree on the score value, and also
the game is only adjudicated after the last move from the losing engine.<br>
<br>
Adjudication is still under test!<br>
<br>
<big><span style="font-weight: bold;">Background textures</span></big><br>
<br>
Add the following to winboard.ini:<br>
<div style="margin-left: 40px;">
<pre>/liteBackTextureFile="sandstone_w.bmp"<br>/darkBackTextureFile="sandstone_b.bmp"<br>/liteBackTextureMode=1<br>/darkBackTextureMode=1</pre>
</div>
Of course you can choose any file you like for texturing the light and
dark squares, as long as it's a valid BMP (Windows bitmap) file. <br>
<br>
Valid texture modes are 1 (default) and 2. In mode 1 the squares are
taken from portions of the texture bitmap and copied without further
processing. In mode 2, squares can also be rotated, mirrored and so on
in order to provide a little more variety to the texture. The
operations are selected at random so the board will look slightly
different every time the program is run.<br>
<br>
Note: to "comment out" a filename, put an asterisk in front of it, i.e.
"*sandstone.bmp" will be skipped.<br>
<br>
Additionally it is possible to override the size of the "gap" between
the squares, which is otherwise selected automatically. Add this to
winboard.ini:<br>
<div style="margin-left: 40px;">
<pre>/overrideLineGap=2</pre>
</div>
I have added this because textures usually look better with a smaller
or no gap. Any negative value will ignore the override and use the
standard value from Winboard.<br>
<br>
The combination of these parameters can produce very interesting
effects, see for example <a
 href="http://usuarios.lycos.es/alexwbtm/Test/">Alex Guerrero's page</a>.<br>
<br>
<big><span style="font-weight: bold;">Font-based rendering of chess
pieces</span></big><br>
<br>
It is possible to use chess fonts to draw pieces, in place of the usual
bitmaps. You have to specify the font name by adding the following to
winboard.ini:<br>
<div style="margin-left: 40px;">
<pre>/renderPiecesWithFont="Chess Leipzig"</pre>
</div>
Chances are the program will automatically recognize the font and
select the proper mapping, i.e. the correspondence between a chess
piece and the corresponding font character. So if the board looks good
you're set and there's nothing else to do, otherwise you'll have to
find the proper mapping and tell it to the program with&nbsp; this
setting:<br>
<div style="margin-left: 40px;">
<pre>/fontPieceToCharTable="phbrqkojntwl"</pre>
</div>
The piece are in order: white pawn, knight, bishop, rook, queen, king
and black pawn, knight, bishop, rook, queen, king. So the example above
tells the program to use the letter "p" for a white pawn, the letter
"h" for a white knight, the letter "t" for a black rook and so on.<br>
<br>
Note: to "comment out" a font name, put an asterisk in front of it,
i.e. "*Chess Merida" will be skipped because of the asterisk.<br>
<br>
It is possible to customize the font foreground and background color,
with these settings:<br>
<div style="margin-left: 40px;">
<pre>/fontPieceBackColorWhite=#ffffcc<br>/fontPieceForeColorWhite=#402010<br>/fontPieceBackColorBlack=#ffffcc<br>/fontPieceForeColorBlack=#301008</pre>
</div>
Colors are expressed in RGB notation. If you are not familiar with the
RGB notation&nbsp; I would suggest to leave them alone until I manage
to update the GUI. In this case, the program will take the board
settings as for the usual piece set.<br>
<br>
It is also possible to control the size of the piece with respect to
the square, for example this entry:<br>
<div style="margin-left: 40px;">
<pre>/fontPieceSize=80</pre>
</div>
tells the program to make the pieces about 20% smaller than a square
(i.e. the piece size is 80%). Note that different fonts may require
different values for this parameter. Usually values in the 70-80 range
provide the best values, but the program accepts anything from 50
to 150.<br>
<br>
Font-based pieces are automatically given a "roundish" look. For now,
this option is not mapped to a user-definable setting.<br>
<br>
<big><span style="font-weight: bold;">Fast clipboard pasting</span></big><br>
<br>
Press Ctrl-V to paste a PGN game or a FEN position from the clipboard,
the program will try to autodetect the proper type.<br>
<br>
<big><span style="font-weight: bold;">Thread initialization bug</span></big><br>
<br>
I've tried to fix a bug reported (and fixed) by Anastasios Milikas (of
AICE), where a thread could try to access a not yet initialized
variable. I've used a different approach here, where threads are
started in a "suspended" state and then released only when the variable
has been initialized (this has the advantage of putting all the
required fix code in one place, and the disadvantage of not having been
tested by Anastasios).<br>
<br>
<big><span style="font-weight: bold;">Protection from some buffer
overflows</span></big><br>
<br>
In just a few cases, I've tried to put some guard against buffer
overflows. These are just quick attempts... a lot more work would be
needed to provide some measurable benefits. I hope that bug **353 is
finally fixed now. The buffer overflows were propagated across several
functions so as soon as one was fixed another would crash!<br>
<br>
<big><span style="font-weight: bold;">Absolute scores can be converted
to relative</span></big><br>
<br>
Some engines (e.g. Crafty, Delphi) always report scores from the white
side (i.e. absolute), rather than the engine side (i.e. relative). This
leads to confusion and breaks features such as automatic adjudication.
In order to convert the scores to relative run Winboard with the
following options:<br>
<div style="margin-left: 40px;">
<pre>/firstScoreAbs true<br>/secondScoreAbs true</pre>
</div>
If true, the score of the first (second) program is considered absolute
and will be negated
when playing black.<br>
<br>
<big><span style="font-weight: bold;">Engine search info can be saved
in a PGN file</span></big><br>
<br>
Add the following to winboard.ini:<br>
<div style="margin-left: 40px;">
<pre>/pgnExtendedInfo=true</pre>
</div>
If true, and the PGN save game option is enabled, each move will be
followed by a comment&nbsp; containing the engine score and thinking
depth (when available).<br>
<br>
Note: can also be set from the General options dialog.<br>
<br>
<big><span style="font-weight: bold;">Engine search info can be hidden
in human-computer games</span></big><br>
<br>
When "show thinking" is disabled, engine thinking is not generated at
all, rather than simply hidden. It is now possible to generate the
think lines (e.g. for logging or saving in the PGN) yet hide them when
the engine is playing against a human player. Add the following to
winboard.ini:<br>
<div style="margin-left: 40px;">
<pre>/hideThinkingFromHuman=true</pre>
</div>
Note: can also be set from the General options dialog.<br>
<br>
<big><span style="font-weight: bold;">Asymmetric time controls</span></big><br>
<br>
Very experimental! You can enter two time controls in the usual dialog,
separated by "/". If so, white will be assigned the first time and
black the second. So for example "0:30/2:00" will give 30 seconds to
white and 2 minutes to black.<br>
<br>
Note: for now these times stay with black and white, rather than the
corresponding player.<br>
<br>
<big><span style="font-weight: bold;">User interface</span></big><br>
<br>
Options to "hide thinking from human" and "save extended info in PGN"
now appears in the "General" options dialog.<br>
<br>
</body>
</html>
